// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
)

type Data struct {
	Query     string  `json:"query"`
	CreatorID string  `json:"creatorId"`
	Title     string  `json:"title"`
	GroupID   string  `json:"groupId"`
	OwnerID   string  `json:"ownerId"`
	ProjectID string  `json:"projectId"`
	CreatedAt float64 `json:"createdAt"`
}

func (o *Data) GetQuery() string {
	if o == nil {
		return ""
	}
	return o.Query
}

func (o *Data) GetCreatorID() string {
	if o == nil {
		return ""
	}
	return o.CreatorID
}

func (o *Data) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *Data) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *Data) GetOwnerID() string {
	if o == nil {
		return ""
	}
	return o.OwnerID
}

func (o *Data) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *Data) GetCreatedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAt
}

// Team - Data representing a Team.
type Team struct {
	// The Preset's unique identifier.
	ID                   string         `json:"id"`
	Data                 Data           `json:"data"`
	AdditionalProperties map[string]any `additionalProperties:"true" json:"-"`
}

func (t Team) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *Team) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *Team) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Team) GetData() Data {
	if o == nil {
		return Data{}
	}
	return o.Data
}

func (o *Team) GetAdditionalProperties() map[string]any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}
