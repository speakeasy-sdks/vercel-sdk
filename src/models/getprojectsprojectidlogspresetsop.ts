/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type GetProjectsProjectIdLogsPresetsRequest = {
  projectId: string;
};

/** @internal */
export const GetProjectsProjectIdLogsPresetsRequest$inboundSchema: z.ZodType<
  GetProjectsProjectIdLogsPresetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectId: z.string(),
});

/** @internal */
export type GetProjectsProjectIdLogsPresetsRequest$Outbound = {
  projectId: string;
};

/** @internal */
export const GetProjectsProjectIdLogsPresetsRequest$outboundSchema: z.ZodType<
  GetProjectsProjectIdLogsPresetsRequest$Outbound,
  z.ZodTypeDef,
  GetProjectsProjectIdLogsPresetsRequest
> = z.object({
  projectId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectsProjectIdLogsPresetsRequest$ {
  /** @deprecated use `GetProjectsProjectIdLogsPresetsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectsProjectIdLogsPresetsRequest$inboundSchema;
  /** @deprecated use `GetProjectsProjectIdLogsPresetsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectsProjectIdLogsPresetsRequest$outboundSchema;
  /** @deprecated use `GetProjectsProjectIdLogsPresetsRequest$Outbound` instead. */
  export type Outbound = GetProjectsProjectIdLogsPresetsRequest$Outbound;
}

export function getProjectsProjectIdLogsPresetsRequestToJSON(
  getProjectsProjectIdLogsPresetsRequest:
    GetProjectsProjectIdLogsPresetsRequest,
): string {
  return JSON.stringify(
    GetProjectsProjectIdLogsPresetsRequest$outboundSchema.parse(
      getProjectsProjectIdLogsPresetsRequest,
    ),
  );
}

export function getProjectsProjectIdLogsPresetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetProjectsProjectIdLogsPresetsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetProjectsProjectIdLogsPresetsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetProjectsProjectIdLogsPresetsRequest' from JSON`,
  );
}
