/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export const PostProjectsProjectIdLogsPresetsGroup = {
  Personal: "personal",
  Team: "team",
} as const;
export type PostProjectsProjectIdLogsPresetsGroup = ClosedEnum<
  typeof PostProjectsProjectIdLogsPresetsGroup
>;

export type PostProjectsProjectIdLogsPresetsRequestBody = {
  /**
   * query parameter for saved filter preset
   */
  query: string;
  /**
   * The title of the preset
   */
  title: string;
  group: PostProjectsProjectIdLogsPresetsGroup;
};

export type PostProjectsProjectIdLogsPresetsRequest = {
  /**
   * projectId of the preset
   */
  projectId: string;
  requestBody?: PostProjectsProjectIdLogsPresetsRequestBody | undefined;
};

/** @internal */
export const PostProjectsProjectIdLogsPresetsGroup$inboundSchema:
  z.ZodNativeEnum<typeof PostProjectsProjectIdLogsPresetsGroup> = z.nativeEnum(
    PostProjectsProjectIdLogsPresetsGroup,
  );

/** @internal */
export const PostProjectsProjectIdLogsPresetsGroup$outboundSchema:
  z.ZodNativeEnum<typeof PostProjectsProjectIdLogsPresetsGroup> =
    PostProjectsProjectIdLogsPresetsGroup$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsProjectIdLogsPresetsGroup$ {
  /** @deprecated use `PostProjectsProjectIdLogsPresetsGroup$inboundSchema` instead. */
  export const inboundSchema =
    PostProjectsProjectIdLogsPresetsGroup$inboundSchema;
  /** @deprecated use `PostProjectsProjectIdLogsPresetsGroup$outboundSchema` instead. */
  export const outboundSchema =
    PostProjectsProjectIdLogsPresetsGroup$outboundSchema;
}

/** @internal */
export const PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema:
  z.ZodType<
    PostProjectsProjectIdLogsPresetsRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    query: z.string(),
    title: z.string(),
    group: PostProjectsProjectIdLogsPresetsGroup$inboundSchema,
  });

/** @internal */
export type PostProjectsProjectIdLogsPresetsRequestBody$Outbound = {
  query: string;
  title: string;
  group: string;
};

/** @internal */
export const PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema:
  z.ZodType<
    PostProjectsProjectIdLogsPresetsRequestBody$Outbound,
    z.ZodTypeDef,
    PostProjectsProjectIdLogsPresetsRequestBody
  > = z.object({
    query: z.string(),
    title: z.string(),
    group: PostProjectsProjectIdLogsPresetsGroup$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsProjectIdLogsPresetsRequestBody$ {
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema;
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema;
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequestBody$Outbound` instead. */
  export type Outbound = PostProjectsProjectIdLogsPresetsRequestBody$Outbound;
}

export function postProjectsProjectIdLogsPresetsRequestBodyToJSON(
  postProjectsProjectIdLogsPresetsRequestBody:
    PostProjectsProjectIdLogsPresetsRequestBody,
): string {
  return JSON.stringify(
    PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema.parse(
      postProjectsProjectIdLogsPresetsRequestBody,
    ),
  );
}

export function postProjectsProjectIdLogsPresetsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostProjectsProjectIdLogsPresetsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostProjectsProjectIdLogsPresetsRequestBody' from JSON`,
  );
}

/** @internal */
export const PostProjectsProjectIdLogsPresetsRequest$inboundSchema: z.ZodType<
  PostProjectsProjectIdLogsPresetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  projectId: z.string(),
  RequestBody: z.lazy(() =>
    PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PostProjectsProjectIdLogsPresetsRequest$Outbound = {
  projectId: string;
  RequestBody?:
    | PostProjectsProjectIdLogsPresetsRequestBody$Outbound
    | undefined;
};

/** @internal */
export const PostProjectsProjectIdLogsPresetsRequest$outboundSchema: z.ZodType<
  PostProjectsProjectIdLogsPresetsRequest$Outbound,
  z.ZodTypeDef,
  PostProjectsProjectIdLogsPresetsRequest
> = z.object({
  projectId: z.string(),
  requestBody: z.lazy(() =>
    PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostProjectsProjectIdLogsPresetsRequest$ {
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostProjectsProjectIdLogsPresetsRequest$inboundSchema;
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostProjectsProjectIdLogsPresetsRequest$outboundSchema;
  /** @deprecated use `PostProjectsProjectIdLogsPresetsRequest$Outbound` instead. */
  export type Outbound = PostProjectsProjectIdLogsPresetsRequest$Outbound;
}

export function postProjectsProjectIdLogsPresetsRequestToJSON(
  postProjectsProjectIdLogsPresetsRequest:
    PostProjectsProjectIdLogsPresetsRequest,
): string {
  return JSON.stringify(
    PostProjectsProjectIdLogsPresetsRequest$outboundSchema.parse(
      postProjectsProjectIdLogsPresetsRequest,
    ),
  );
}

export function postProjectsProjectIdLogsPresetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostProjectsProjectIdLogsPresetsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostProjectsProjectIdLogsPresetsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostProjectsProjectIdLogsPresetsRequest' from JSON`,
  );
}
